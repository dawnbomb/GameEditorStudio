<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:GameEditorStudio.Properties">

    
    <!--
    IMPORTANT NOTE:
    I use TextFormattingMode and TextRenderingMode all over, due to a crazy WPF rendering issue. 
    The combination of subpixel anti-aliasing, floating-point layout rounding, and DirectWrite font rasterization 
    is causing my fucking pixel font to render wrong in a very weird way! 
    basically, at just the right window / font size, due to sub pixel nonsense, the text is rendering, instead of
    appearing with a dark blue afterimage to the left and red afterimage to the right like all normal text, 
    instead at just the right subpixel size, it renders with a light blue left afterimage, and yellow right afterimage,
    making the text appear extremely fucked up. 
    
    SO, DON'T REMOVE THESE, AND ADD THEM TO ANYTHING TEXT BASED IN THE ENTIRE PROGRAM!!!
    -->


    <Style TargetType="{x:Type Run}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <!--<Setter Property="FontSize" Value="16" />-->
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey= ApplicationText}"/>
    </Style>


    <!--Application-->
    <Style TargetType="{x:Type Label}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <!--<Setter Property="FontSize" Value="16" />-->
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey= ApplicationText}"/>
    </Style>

    <Style x:Key="BorderGrid" TargetType="{x:Type Grid}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey= ApplicationBorder}"/>
    </Style>

    <Style x:Key="BorderDock" TargetType="{x:Type DockPanel}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey=ApplicationBorder}"/> <!--ApplicationBack-->
    </Style>

    <Style x:Key="SplitterHorizontal" TargetType="GridSplitter">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SplitterVertical" TargetType="GridSplitter">
        <Setter Property="Background" Value="Transparent"/> <!--Value="{DynamicResource ApplicationBorder}"-->
        <Setter Property="Width" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="ToolTip">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HasDropShadow" Value="False"/>
        <Setter Property="Background" Value="#FF1E1E1E"/>
        <Setter Property="Foreground" Value="#F0F0F0"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="Gray" Padding="2">
                        <!-- Middle brown border (4px) -->
                        <Border Background="Black" Padding="1">
                            <!-- Inner black border (2px) -->
                            <Border Background="{TemplateBinding Background}" 
            BorderThickness="0" 
            SnapsToDevicePixels="True">
                                <ContentPresenter 
            Margin="2" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Center" 
            RecognizesAccessKey="True"/>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey=ButtonBack}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=ButtonText}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                 BorderThickness="{TemplateBinding BorderThickness}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 Background="{TemplateBinding Background}"
                 Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                   Content="{TemplateBinding Content}"
                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=ButtonMouseoverBack}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=ButtonMouseoverText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonMouseoverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=ButtonDownText}"/>
                <Setter Property="Background" Value="{DynamicResource ResourceKey=ButtonDownBack}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonDownBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="Button">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="#2d2d2d"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True" Background="Transparent">
                        <Border x:Name="MainBackground"  Background="{TemplateBinding Background}" BorderThickness="0"/>
                        <Border BorderThickness="0,0,0,2"  BorderBrush="#242424"  Margin="0"/>
                        <Border BorderThickness="2"  BorderBrush="#171717" Margin="0,0,0,2"/> 
                        <Border x:Name="InnerBorder" BorderThickness="2"  BorderBrush="#4d4d4d"  Margin="2,2,2,4"/>
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center"  RecognizesAccessKey="True" Margin="0,0,0,2"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#4d4d4d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#2d2d2d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonCurrentEditorTab">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True" Margin="0,0,0,0" Background="Transparent">
                        <!-- Background Layer -->
                        <Border x:Name="MainBackground" Background="{TemplateBinding Background}" BorderThickness="0" Margin="0,0,0,0"/>
                        <Border x:Name="OuterBorder2" BorderThickness="2,2,2,0"   BorderBrush="#575757"  Margin="0,0,0,0"/>
                        <Border x:Name="OuterBorder" BorderThickness="2,2,2,0"   BorderBrush="#000000"  Margin="0,0,0,2"/>
                        <Border x:Name="InnerBorder" BorderThickness="2,2,2,0" BorderBrush="#575757"  Margin="2,2,2,0"/>
                        <ContentPresenter HorizontalAlignment="Center"   VerticalAlignment="Center"  RecognizesAccessKey="True" Margin="0,0,0,0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#4d4d4d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#2d2d2d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style TargetType="Button" x:Key="ButtonEditorTab">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="#4F4F4F"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="#202020"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True" Margin="0,0,0,0" Background="Transparent">
                        <!-- Background Layer -->
                        <Border x:Name="MainBackground" Background="{TemplateBinding Background}" BorderThickness="0" Margin="0,0,0,0"/>
                        <Border x:Name="OuterBorder2" BorderThickness="2,2,2,2"   BorderBrush="#575757"  Margin="0,0,0,0"/>
                        <Border x:Name="OuterBorder" BorderThickness="2,2,2,2"   BorderBrush="#000000"  Margin="0,0,0,2"/>
                        <Border x:Name="InnerBorder" BorderThickness="2,2,2,0" BorderBrush="#474747"  Margin="2,2,2,4"/>
                        <ContentPresenter HorizontalAlignment="Center"   VerticalAlignment="Center"  RecognizesAccessKey="True" Margin="0,0,0,0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#4d4d4d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#2d2d2d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="ButtonError">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey= ErrorText}"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="{StaticResource ResourceKey= ErrorRed}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True">

                        <!-- Background Layer -->
                        <Border x:Name="MainBackground"
                    Background="{TemplateBinding Background}"/>

                        <!-- Outer Border -->
                        <Border BorderThickness="2"
                    BorderBrush="{StaticResource ResourceKey= ErrorRed}"/>

                        <!-- Inner Border -->
                        <Border x:Name="InnerBorder" BorderThickness="2"
                    BorderBrush="{StaticResource ResourceKey= ErrorText}"
                    Margin="2"/>


                        <!-- Content -->
                        <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#4d4d4d"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="{StaticResource ResourceKey= ErrorRed}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ResourceKey= ErrorText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--<Style TargetType="{x:Type Button}" x:Key="ButtonError">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Background" Value="{StaticResource ResourceKey= ErrorRed}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey= ErrorText}"/>
    </Style>-->


    <!--Panels aka default-->

    <Style  TargetType="{x:Type Grid}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey= PanelBack}"/>
    </Style>

    <Style TargetType="{x:Type DockPanel}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey=PanelBack}"/>        
    </Style>

    <!--BUG: Sometimes a border background color appears at the very top of a listview. Fix this eventually! Obvious is set to a color like red.-->
    <Style TargetType="{x:Type Border}" >
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= PanelBorder}"/>
    </Style>

    <Style TargetType="{x:Type ContentControl}" >
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <!-- Outer Border -->
                    <DockPanel Background="Transparent">
                        <Border BorderThickness="0,2,0,0" BorderBrush="#2B2B2B" Background="Transparent" Margin="2,0,2,0" DockPanel.Dock="Top">
                            <!-- Inner Border -->                            
                        </Border>
                        <Border BorderThickness="2,0,2,2" BorderBrush="#575757" Background="{TemplateBinding Background}"  DockPanel.Dock="Top">
                            <Border>
                                <ContentPresenter />
                            </Border>                            
                        </Border>
                    </DockPanel>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditorButtonBorder" TargetType="{x:Type Border}" >
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= PanelBorder}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=SelectedEntryBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Headers-->


    <Style x:Key="HeaderGrid" TargetType="{x:Type Grid}" >
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey= HeaderBack}"/>
    </Style>

    <Style x:Key="HeaderDock" TargetType="{x:Type DockPanel}" >
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HeaderBack}"/>
    </Style>


    <!--New Editor-->

    <Style TargetType="{x:Type Border}" x:Key="EntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=EntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=EntryBack}"/>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="SelectedEntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=SelectedEntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=SelectedEntryBack}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="HiddenEntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=HiddenEntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HiddenEntryBack}"/>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="HiddenSelectedEntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=HiddenSelectedEntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HiddenSelectedEntryBack}"/>
    </Style>





    <Style TargetType="{x:Type DockPanel}" x:Key="EntryNoSaveStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Red}"/>
    </Style>














    <!--Old Editor-->


    <Style TargetType="{x:Type Border}" x:Key="EntryDisabled" >
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_Red}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey= DarkMode_RedBorder}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="EntryAutoDisabled" >
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_AutoDisable}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey= DarkMode_AutoDisableBorder}"/>
    </Style>


    <Style TargetType="{x:Type Border}" x:Key="EntryColorBlue" >
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkEntryBlue}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey= DarkEntryBlueBorder}"/>
    </Style>




    <Style TargetType="{x:Type Grid}" x:Key="StyleFrontGrid">
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_Middle}"/>
    </Style>
    
    <Style TargetType="{x:Type Grid}" x:Key="StylePanelGrid">
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_Panel}"/>
    </Style>


    <Style TargetType="{x:Type DockPanel}" x:Key="PageStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Far}"/>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="RowStyle">
        <Setter Property="Background" Value="#141114"/> <!--Value="{StaticResource ResourceKey=DarkMode_Middle}"-->
    </Style>


    <Style TargetType="{x:Type DockPanel}" x:Key="ColumnStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Front}"/>
    </Style>

    



    



</ResourceDictionary>