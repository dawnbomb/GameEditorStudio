<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:GameEditorStudio.Properties">

    <!--Application-->
    <Style TargetType="{x:Type Label}">
        <!--<Setter Property="FontSize" Value="16" />-->
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey= ApplicationText}"/>
    </Style>

    <Style x:Key="BorderGrid" TargetType="{x:Type Grid}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey= ApplicationBorder}"/>
    </Style>

    <Style x:Key="BorderDock" TargetType="{x:Type DockPanel}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey=ApplicationBorder}"/> <!--ApplicationBack-->
    </Style>

    <Style x:Key="SplitterHorizontal" TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource ApplicationBorder}"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ApplicationBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SplitterVertical" TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource ApplicationBorder}"/>
        <Setter Property="Width" Value="4"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Style.Triggers>            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ApplicationBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--<Style  TargetType="{x:Type ContextMenu}" >
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ApplicationBorder}"/>
    </Style>-->
    
    
    
    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey=ButtonBack}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=ButtonText}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                 BorderThickness="{TemplateBinding BorderThickness}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 Background="{TemplateBinding Background}"
                 Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                   Content="{TemplateBinding Content}"
                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=ButtonMouseoverBack}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=ButtonMouseoverText}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonMouseoverBorder}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=ButtonDownText}"/>
                <Setter Property="Background" Value="{DynamicResource ResourceKey=ButtonDownBack}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=ButtonDownBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="#2d2d2d"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True">

                        <!-- Background Layer -->
                        <Border x:Name="MainBackground"
                        Background="{TemplateBinding Background}"/>

                        <!-- Outer Border -->
                        <Border BorderThickness="2"
                        BorderBrush="#171717"/> 

                        <!-- Inner Border -->
                        <Border x:Name="InnerBorder" BorderThickness="2"
                        BorderBrush="#4d4d4d"
                        Margin="2"/>

                        
                        <!-- Content -->
                        <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#4d4d4d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#2d2d2d"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#2d2d2d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Button" x:Key="ButtonError">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey= ErrorText}"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Background" Value="{StaticResource ResourceKey= ErrorRed}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid SnapsToDevicePixels="True">

                        <!-- Background Layer -->
                        <Border x:Name="MainBackground"
                    Background="{TemplateBinding Background}"/>

                        <!-- Outer Border -->
                        <Border BorderThickness="2"
                    BorderBrush="{StaticResource ResourceKey= ErrorRed}"/>

                        <!-- Inner Border -->
                        <Border x:Name="InnerBorder" BorderThickness="2"
                    BorderBrush="{StaticResource ResourceKey= ErrorText}"
                    Margin="2"/>


                        <!-- Content -->
                        <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="#4d4d4d"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBackground" Property="Background" Value="{StaticResource ResourceKey= ErrorRed}"/>
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ResourceKey= ErrorText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--<Style TargetType="{x:Type Button}" x:Key="ButtonError">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Background" Value="{StaticResource ResourceKey= ErrorRed}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey= ErrorText}"/>
    </Style>-->


    <!--Panels aka default-->

    <Style  TargetType="{x:Type Grid}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey= PanelBack}"/>
    </Style>

    <Style TargetType="{x:Type DockPanel}" >
        <Setter Property="Background" Value="{DynamicResource ResourceKey=PanelBack}"/>        
    </Style>

    <!--BUG: Sometimes a border background color appears at the very top of a listview. Fix this eventually! Obvious is set to a color like red.-->
    <Style TargetType="{x:Type Border}" >
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= PanelBorder}"/>
    </Style>

    <Style x:Key="EditorButtonBorder" TargetType="{x:Type Border}" >
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= PanelBorder}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=SelectedEntryBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Headers-->


    <Style x:Key="HeaderGrid" TargetType="{x:Type Grid}" >
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey= HeaderBack}"/>
    </Style>

    <Style x:Key="HeaderDock" TargetType="{x:Type DockPanel}" >
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HeaderBack}"/>
    </Style>


    <!--New Editor-->

    <Style TargetType="{x:Type Border}" x:Key="EntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=EntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=EntryBack}"/>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="SelectedEntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=SelectedEntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=SelectedEntryBack}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="HiddenEntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=HiddenEntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HiddenEntryBack}"/>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="HiddenSelectedEntryStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=HiddenSelectedEntryBorder}"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey=HiddenSelectedEntryBack}"/>
    </Style>





    <Style TargetType="{x:Type DockPanel}" x:Key="EntryNoSaveStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Red}"/>
    </Style>














    <!--Old Editor-->


    <Style TargetType="{x:Type Border}" x:Key="EntryDisabled" >
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_Red}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey= DarkMode_RedBorder}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="EntryAutoDisabled" >
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_AutoDisable}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey= DarkMode_AutoDisableBorder}"/>
    </Style>


    <Style TargetType="{x:Type Border}" x:Key="EntryColorBlue" >
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkEntryBlue}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey= DarkEntryBlueBorder}"/>
    </Style>




    <Style TargetType="{x:Type Grid}" x:Key="StyleFrontGrid">
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_Middle}"/>
    </Style>
    
    <Style TargetType="{x:Type Grid}" x:Key="StylePanelGrid">
        <Setter Property="Background" Value="{StaticResource ResourceKey= DarkMode_Panel}"/>
    </Style>


    <Style TargetType="{x:Type DockPanel}" x:Key="PageStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Far}"/>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="RowStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Middle}"/>
    </Style>


    <Style TargetType="{x:Type DockPanel}" x:Key="ColumnStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=DarkMode_Front}"/>
    </Style>

    



    



</ResourceDictionary>