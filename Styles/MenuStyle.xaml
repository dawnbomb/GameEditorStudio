<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:GameEditorStudio.Properties">



    
    <Style  TargetType="{x:Type Menu}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey= MenuBack}" />
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="BorderBrush" Value="Green" />
        <Setter Property="OpacityMask" Value="DarkOliveGreen" />
        <Setter Property="FontSize" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey= MenuBack}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="Background" Value="{DynamicResource ResourceKey= MenuBack}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= MenuMouseoverBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0,0, 0,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="20"/>
        
    </Style>


    
        <!-- Define the Style for MenuItem -->
    <Style  TargetType="MenuItem">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Dawns 10px ArkPixel" />
        <Setter Property="Foreground"  Value="{DynamicResource ResourceKey= MenuText}" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey= MenuBack}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= MenuBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,0,8,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <!-- Control template for custom appearance and submenu support -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal">
                            <!-- Content Presenter to display the Header or custom content -->
                            <ContentPresenter ContentSource="Header"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"/>

                            <!-- Placeholder for Submenu Items -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   AllowsTransparency="True"
                                   Focusable="False">
                                <Border Background="{DynamicResource ResourceKey= MenuBack}"
                                        BorderBrush="{DynamicResource ResourceKey= MenuMouseoverBorder}"
                                        BorderThickness="1">
                                    <StackPanel IsItemsHost="True" />
                                </Border>
                            </Popup>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Trigger for Highlighted (Mouse Over) State -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey= MenuMouseoverBack}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey= MenuMouseoverBorder}" />
                            <Setter Property="Foreground" Value="{DynamicResource ResourceKey= MenuMouseoverText}" />
                        </Trigger>
                        <!-- Trigger for Submenu Open State -->
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Popup" Property="IsOpen" Value="True" />
                        </Trigger>
                        <!-- Trigger for Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    


    <Style x:Key="KeySeperator" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border 
                        Height="2" 
                        Margin="4, 0, 2, 0" 
                        Background="#FF585451" />
                    <!-- Modify the Background property -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









</ResourceDictionary>