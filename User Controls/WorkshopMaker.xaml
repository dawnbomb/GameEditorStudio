<UserControl x:Class="GameEditorStudio.WorkshopMaker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GameEditorStudio"
             mc:Ignorable="d" >
    <Grid x:Name="WorkshopTab" >
        <Border Height="38" VerticalAlignment="Top">
            <DockPanel >
                <DockPanel Style="{DynamicResource HeaderDock}"  DockPanel.Dock="Top">
                    <Label Content="Workshop Manager" FontWeight="Bold" />
                    <Button x:Name="ButtonCancel" Content="Exit without saving" HorizontalAlignment="Right" Margin="0,1,5,1" VerticalAlignment="Top"  Width="230" Click="ButtonCancel_Click" Height="30"/>
                </DockPanel>
            </DockPanel>
        </Border>

        <DockPanel DockPanel.Dock="Top" Margin="10,47,0,0" Height="70" VerticalAlignment="Top"  Width="250" HorizontalAlignment="Left" >
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <Label Content="Workshop Name" DockPanel.Dock="Left" Margin="-3,0,0,0"  />
            </DockPanel>
            <DockPanel DockPanel.Dock="Top" >
                <Border CornerRadius="8" BorderBrush="Black"  BorderThickness="1.5" Padding="2" Background="#FF18191B">
                    <TextBox x:Name="TextBoxGameName" Margin="2,0,2,0" Padding="4"  BorderThickness="0"  DockPanel.Dock="Left"  />
                </Border>


            </DockPanel>
        </DockPanel>

        <DockPanel DockPanel.Dock="Top" Margin="10,120,0,0" Height="72" VerticalAlignment="Top" Width="250" HorizontalAlignment="Left"  >
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                <Label Content="Input Folder" DockPanel.Dock="Left" Margin="-3,0,0,0"  />
                <Button x:Name="ButtonSetWorkshopInputFolder" Content="Set Folder" Height="30"  Width="120" Click="ButtonSetWorkshopInputFolder_Click" Padding="0,1,1,0" DockPanel.Dock="Right" />


            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Border CornerRadius="8" BorderBrush="Black"  BorderThickness="1.5" Padding="2" Background="#FF18191B">
                    <TextBox x:Name="WorkshopTextboxExampleInputFolder" Margin="2,0,2,0" Padding="4"  BorderThickness="0"  DockPanel.Dock="Left"  IsEnabled="False" />
                </Border>


            </DockPanel>
        </DockPanel>



        <Button x:Name="ButtonCreateNewWorkshop" Content="Create New Workshop" HorizontalAlignment="Left" Margin="6,204,0,0" VerticalAlignment="Top" Height="33" Width="254" Click="ButtonCreateNewWorkshop_Click" />

        <Border Margin="265,38,10,0" Height="379" VerticalAlignment="Top" >
            <DockPanel  Background="#FF3C3C3C">
                <Border  Height="36" DockPanel.Dock="Top" BorderThickness="0,0,0,1">
                    <DockPanel >
                        <DockPanel Style="{DynamicResource HeaderDock}"  DockPanel.Dock="Top">
                            <Label Content="Notes on the input folder, file repacking, and events / event resources." FontWeight="Bold" DockPanel.Dock="Left" />
                        </DockPanel>
                    </DockPanel>
                </Border>
                <ScrollViewer DockPanel.Dock="Top">
                    <TextBox TextWrapping="Wrap" Text="A workshop is a location that holds game editors of different types. &#xA;Editors are ONLY ALLOWED to use files INSIDE the workshop's input folder (and any subfolders). TIP: Make the the input folder be a BACKUP of your game / rom folder. &#xA;&#xA;Now, sometimes games will have file unpacking and repacking problems. Worse case, after using a workshop's editors, you need to repack some files, then move them, then repack the game / rom. If you have advanced problems like that, i created the &quot;Eventing&quot; system to solve them! &#xA;&#xA;Events can do file unpacking/repacking, moving them, launching third party programs, etc. Below you can define any files/folders (event resources) to use. These can be outside the input folder..&#xA;&#xA;Events run commands in sequence, here is a 5-command example event i personally use. &#xD;&#xA;- 1: save all files&#xD;&#xA;- 2: Repack specific files&#xD;&#xA;- 3: Move only some files to folder X&#xD;&#xA;- 4: Repack rom at folder X&#xD;&#xA;- 5: Run file Y (Emulator) with file Z (the game rom)! &#xD;&#xA;BOOM, a 1-click event that even launches the game!   " Margin="10,10,10,10" Focusable="False" Background="{x:Null}" BorderBrush="{x:Null}" IsHitTestVisible="False"  DockPanel.Dock="Top"   />



                </ScrollViewer>

            </DockPanel>
        </Border>



        <DockPanel Margin="0,433,0,0" Background="#FF3C3C3C">
            <Border  Height="36" DockPanel.Dock="Top">
                <DockPanel >
                    <DockPanel Style="{DynamicResource HeaderDock}"  DockPanel.Dock="Top">
                        <Label Content="Workshop Event Resources" FontWeight="Bold" DockPanel.Dock="Left" />
                        <DockPanel DockPanel.Dock="Left" LastChildFill="False"  Margin="0,0,0,0" Background="#FF18181F">
                            <!--NOTE: these 4 buttons exist seperatly for a reason!
                            I dont want to allow uses to swap a resources type!
                            If a event says use resource X, and it swaps from a file to a folder, i can see lots of problems, crashes, etc.
                            Like trying to run a folder as a file for a emulator, because the resource was previously a file, and some users already setup that files location, before the updated workshop changed the resource type.-->
                            <Button Content="New Local File" Click="NewEventResourceLocalFile" Width="155" Height="31" />
                            <Button Content="New Local Folder" Click="NewEventResourceLocalFolder" Width="185" Height="30"/>
                            <Button Content="New Relative File" Click="NewEventResourceRelativeFile" Width="190" Height="30"/>
                            <Button Content="New Relative Folder" Click="NewEventResourceRelativeFolder" Width="210" Height="30" Style="{DynamicResource ButtonError}"/>
                        </DockPanel>
                        <!--<Label Content="(skipuntil your ready for the eventing system)" DockPanel.Dock="Right" HorizontalAlignment="Right"/>-->
                    </DockPanel>
                </DockPanel>
            </Border>
            <ScrollViewer VerticalScrollBarVisibility="Auto"  >
                <DockPanel Name="ResourcePanel" DockPanel.Dock="Top" LastChildFill="False">

                </DockPanel>
            </ScrollViewer>
            <!--<DockPanel Margin="10,10,10,10" DockPanel.Dock="Top">
                
                

            </DockPanel>-->

        </DockPanel>


    </Grid>
</UserControl>
